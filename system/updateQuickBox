#!/bin/bash
#
# [Quick Box :: EcoSystem Update Script]
#
# GitHub:   https://github.com/QuickBox/quickbox_packages
# Author:   QuickBox.io
# URL:      https://plaza.quickbox.io
#
# QuickBox Copyright (C) 2016 Swizards.net
# Licensed under GNU General Public License v3.0 GPL-3 (in short)
#
#   You may copy, distribute and modify the software as long as you track
#   changes/dates in source files. Any modifications to our software
#   including (via compiler) GPL-licensed code must also be made available
#   under the GPL along with build & install instructions.
#
#################################################################################
#Script Console Colors
black=$(tput setaf 0); red=$(tput setaf 1); green=$(tput setaf 2); yellow=$(tput setaf 3);
blue=$(tput setaf 4); magenta=$(tput setaf 5); cyan=$(tput setaf 6); white=$(tput setaf 7);
on_red=$(tput setab 1); on_green=$(tput setab 2); on_yellow=$(tput setab 3); on_blue=$(tput setab 4);
on_magenta=$(tput setab 5); on_cyan=$(tput setab 6); on_white=$(tput setab 7); bold=$(tput bold);
dim=$(tput dim); underline=$(tput smul); reset_underline=$(tput rmul); standout=$(tput smso);
reset_standout=$(tput rmso); normal=$(tput sgr0); alert=${white}${on_red}; title=${standout};
sub_title=${bold}${yellow}; repo_title=${black}${on_green}; message_title=${white}${on_magenta}
#################################################################################
function _string() { perl -le 'print map {(a..z,A..Z,0..9)[rand 62] } 0..pop' 15 ; }
#################################################################################

function _bashrc() {
  cp ${local_setup}templates/bashrc.template ~/.bashrc
}

function _logcheck() {
  OUTTO=/root/quickbox.update.$PPID.log
}

# check if root function (2)
function _checkroot() {
  if [[ $EUID != 0 ]]; then
    echo 'This script must be run with root privileges.'
    echo 'Exiting...'
    exit 1
  fi
  echo "${green}Congrats! You're running as root. We will now run the update${normal} ... "
  echo
}

function _askversion() {
  echo -e "${bold}${yellow}1)${normal} versions under 2.3${normal}"
  echo -e "${bold}${yellow}2)${normal} versions above 2.3${normal}"
  echo -ne "${bold}${yellow}What version of QuickBox are you updating from?${normal} [${green}1${normal}] or [2] : "; read version
  case $version in
    1 | "") qbversion=v22  ;;
    2) qbversion=v23  ;;
    *) qbversion=v22 ;;
  esac
}

function _askcontinue() {
  echo
  echo "Press ${standout}${green}ENTER${normal} when you're ready to begin or ${standout}${red}Ctrl+Z${normal} to cancel" ;read input
  echo
}

function _downloadrepos() {
  git clone https://github.com/QuickBox/quickbox_setup /root/quickbox_setup >> /dev/null 2>&1
  git clone https://github.com/QuickBox/quickbox_rutorrent /root/quickbox_rutorrent >> /dev/null 2>&1
  git clone https://github.com/QuickBox/quickbox_rutorrent-plugins /root/quickbox_rutorrent-plugins >> /dev/null 2>&1
  git clone https://github.com/QuickBox/quickbox_packages /root/quickbox_packages >> /dev/null 2>&1
  git clone https://github.com/QuickBox/quickbox_dashboard /root/quickbox_dashboard >> /dev/null 2>&1
}

function _updatesyscommands() {
  cd /usr/local/bin
  if [[ ${qbversion} == "v22" ]]; then
    for x in installplugin-* removeplugin-* installpackage-* removepackage-*; do
      rm $x >>"${OUTTO}" 2>&1
    done
  fi

  if [[ -d ${usrbin}quickbox ]]; then rm -r ${usrbin}quickbox;fi
  mkdir -p ${usrbin}quickbox
  cp -r ${local_packages}/. ${usrbin}quickbox
  dos2unix $(find /usr/local/bin/quickbox -type f) >>"${OUTTO}" 2>&1;
  chmod +x $(find /usr/local/bin/quickbox -type f) >>"${OUTTO}" 2>&1;
  if [[ -f /usr/bin/reload ]]; then rm /usr/bin/reload;fi
  cp ${usrbin}quickbox/system/reload /usr/bin/reload

}

function _updateskel() {
  if [[ -d /etc/skel ]]; then rm -r /etc/skel;fi
  mkdir /etc/skel
  cp -r ${local_setup}templates/skel/. /etc/skel
}

function _updaterutorrent() {
  cd /srv
  #if [[ -d ${rtorrent} ]]; then rm -rf rutorrent;fi
  #mkdir rutorrent
  cp -R ${local_rutorrent}/. rutorrent
}

function _updaterutorrent-plugins() {
  cd ${rtorrent}
  #if [[ -d ${rtorrent}plugins ]]; then rm -rf plugins;fi
  #mkdir plugins
  cp -R ${local_rplugins}/. plugins
}

# function to install dashboard (23)
function _updatedashboard() {
  cd ${rtorrent}
  if [[ -d ${rtorrent}home ]]; then rm -rf home;fi
  cd && mkdir -p ${rtorrent}home
  cp -R ${local_dashboard}/. ${rtorrent}home
}

function _updatemasterdb() {
  if [[ -f /etc/apache2/master.txt ]]; then cp /etc/apache2/master.txt ${rtorrent}home/db/master.txt;fi
  printf "${IFACE}" > ${rtorrent}home/db/interface.txt
}

function _updatesudo() {
  rm /etc/sudoers
  cp ${local_setup}templates/sudoers.template /etc/sudoers
    awk -v username=${MASTER} '/^root/ && !x {print username    " ALL=(ALL:ALL) NOPASSWD: ALL"; x=1} 1' /etc/sudoers > /tmp/sudoers;mv /tmp/sudoers /etc
    echo -n "${username}" > /etc/apache2/master.txt
  cd
}

function _updatecronfile() {
  cp ${local_setup}templates/startup.template /home/${MASTER}/.startup
}

function _updateboot() {
  echo "*/1 * * * * root bash /usr/local/bin/quickbox/system/set_interface" > /etc/cron.d/set_interface
}

# adjust permissions function (9)
function _perms() {
  chgrp -R www-data /srv/rutorrent/*
  chmod -R g+rw /srv/rutorrent/*
  sh -c 'find /srv/rutorrent/* -type d -print0 | sudo xargs -0 chmod g+s'
}

function _fin() {
  echo;echo
  echo -e " ${black}${on_green}    [quickbox] Seddbox & GUI Update Completed !   ${normal} "
  echo;echo
}

spinner() {
    local pid=$1
    local delay=0.25
    local spinstr='|/-\'
    while [ "$(ps a | awk '{print $1}' | grep $pid)" ]; do
        local temp=${spinstr#?}
        printf " [${bold}${yellow}%c${normal}]  " "$spinstr"
        local spinstr=$temp${spinstr%"$temp"}
        sleep $delay
        printf "\b\b\b\b\b\b"
    done
    printf "    \b\b\b\b"
    echo -ne "${OK}"
}

local_setup=/root/quickbox_setup/
local_rutorrent=/root/quickbox_rutorrent/
local_rplugins=/root/quickbox_rutorrent-plugins
local_packages=/root/quickbox_packages/
local_dashboard=/root/quickbox_dashboard/

Reth0=$(ifconfig | grep -m 1 "Link encap" | sed 's/[ \t].*//;/^\(lo\|\)$/d' | awk '{ print $1 '});
IFACE=$(echo -n "${Reth0}");
MASTER=$(cat /srv/rutorrent/home/db/master.txt)
rtorrent=/srv/rutorrent/
usrbin=/usr/local/bin/

# QuickBox Update STRUCTURE
echo
echo ""
echo "${bold}${magenta}QuickBox will now update, this may take between${normal}"
echo "${bold}${magenta}5 and 15 minutes depending on your systems specs${normal}"
echo ""
_bashrc
echo -n "Sending update output to /root/quickbox.update.${cyan}$PPID${normal}.log ... ";_logcheck & spinner $!;echo
_checkroot
_askversion
_askcontinue
echo -n "Pulling QuickBox Ecosystem ... ";_downloadrepos & spinner $!;echo
echo -n "Updating QuickBox System Commands & Packages ... ";_updatesyscommands & spinner $!;echo
echo -n "Updating the useradd skeleton directories ... ";_updateskel & spinner $!;echo
echo -n "Updating the rutorrent directory ... ";_updaterutorrent & spinner $!;echo
echo -n "Updating the QuickBox Dashboard ... ";_updatedashboard & spinner $!;echo
echo -n "Setting up and updating Master DB files ... ";_updatemasterdb & spinner $!;echo
echo -n "Updating the QuickBox Sudoers template ... ";_updatesudo & spinner $!;echo
echo -n "Updating ${MASTER}'s .startup cronfile... ";_updatecronfile & spinner $!;echo
echo -n "Updating QuickBox crons for boot ... ";_updateboot & spinner $!;echo
echo -n "Adjusting permissions ... "_perms & spinner $!;echo
_fin
